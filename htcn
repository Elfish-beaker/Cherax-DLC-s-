notification.show("Thanks for using Heist Tool V2.3") -- welcome message
------------------Start Content Section--------------------

------------------Cayo Section--------------------
local function unlockAllCayoPOI()
    -- mp0 character (player 0)
    -- MP0 (Character 0)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_H4CNF_BS_GEN"), -1, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_H4CNF_BS_ENTR"), 63, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_H4CNF_BS_ABIL"), 63, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_H4CNF_APPROACH"), -1, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_H4_PLAYTHROUGH_STATUS"), 10, true)
    locals.set_int("heist_island_planning", 1568, 2)

    -- MP1 (Character 1)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_H4CNF_BS_GEN"), -1, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_H4CNF_BS_ENTR"), 63, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_H4CNF_BS_ABIL"), 63, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_H4CNF_APPROACH"), -1, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_H4_PLAYTHROUGH_STATUS"), 10, true)
    locals.set_int("heist_island_planning", 1568, 2)

    notification.show("Unlocked all Cayo POI")
end


-- difficulties
local selectedDifficulty = 126823

local difficulties = {{
    name = "Normal",
    index = 126823
}, {
    name = "Hard",
    index = 131055
}}

-- Approaches
local selectedApproach = 65283

local approaches = {{
    name = "Kosatka",
    index = 65283
}, {
    name = "Alkonost",
    index = 65413
}, {
    name = "Velum",
    index = 65289
}, {
    name = "Stealth Annih.",
    index = 65425
}, {
    name = "Patrol Boat",
    index = 65313
}, {
    name = "Longfin",
    index = 65345
}, {
    name = "All Ways",
    index = 65535
}}
-- Weapon Loadouts
local selectedLoadout = 1

local loadouts = {{
    name = "Aggressor",
    index = 1
}, {
    name = "Conspirator",
    index = 2
}, {
    name = "Crackshot",
    index = 3
}, {
    name = "Saboteur",
    index = 4
}, {
    name = "Marksman",
    index = 5
}}

local selectedTarget = 0

local targets = {{
    name = "Tequila($900,000)",
    index = 0
}, {
    name = "Ruby Necklace($1,000,000)",
    index = 1
}, {
    name = "Bearer Bonds($1,100,100)",
    index = 2
}, {
    name = "Pink Diamond($1,300,000)",
    index = 3
}, {
    name = "Madrazo Files($1,100,100)",
    index = 4
}, {
    name = "Panther Statue($1,900,100)",
    index = 5
}}

-- Selected Target Holders
local selectedCompoundTarget = "NONE"
local selectedIslandTarget = "NONE"

-- Loot Types
local secondaryTargets = {{
    name = "None",
    index = "NONE"
}, {
    name = "Cash",
    index = "CASH"
}, {
    name = "Weed",
    index = "WEED"
}, {
    name = "Coke",
    index = "COKE"
}, {
    name = "Gold",
    index = "GOLD"
}}

local selectedCompoundAmount = 255

local compoundAmounts = {
    {name = "Empty", index = 0},
    {name = "Full", index = 255},
    {name = "1", index = 128},
    {name = "2", index = 64},
    {name = "3", index = 196},
    {name = "4", index = 204},
    {name = "5", index = 220},
    {name = "6", index = 252},
    {name = "7", index = 253}
}

local selectedIslandAmount = 16777215

local islandAmounts = {
    {name = "Empty", index = 0},
    {name = "Full", index = 16777215},
    {name = "1", index = 8388608},
    {name = "2", index = 12582912},
    {name = "3", index = 12845056},
    {name = "4", index = 12976128},
    {name = "5", index = 13500416},
    {name = "6", index = 14548992},
    {name = "7", index = 16646144},
    {name = "8", index = 16711680},
    {name = "9", index = 16744448},
    {name = "10", index = 16760832},
    {name = "11", index = 16769024},
    {name = "12", index = 16769536},
    {name = "13", index = 16770560},
    {name = "14", index = 16770816},
    {name = "15", index = 16770880},
    {name = "16", index = 16771008},
    {name = "17", index = 16773056},
    {name = "18", index = 16777152},
    {name = "19", index = 16777184},
    {name = "20", index = 16777200},
    {name = "21", index = 16777202},
    {name = "22", index = 16777203},
    {name = "23", index = 16777211}
}

local selectedArtsAmount = 127

local artsAmounts = {
    {name = "Empty", index = 0},
    {name = "Full", index = 127},
    {name = "1", index = 64},
    {name = "2", index = 96},
    {name = "3", index = 112},
    {name = "4", index = 120},
    {name = "5", index = 122},
    {name = "6", index = 126}
}

local cashValue = 83250
local weedValue = 135000
local cokeValue = 202500
local goldValue = 333333
local artsValue = 180000

local function MPX()
    local charIndex = globals.get_int(1574927)
    return "MP" .. tostring(charIndex) .. "_"
end

local function applyPreps(
    selectedDifficulty, selectedApproach, selectedLoadout,
    selectedTarget,
    selectedCompoundTarget, selectedCompoundAmount, selectedArtsAmount,
    selectedIslandTarget, selectedIslandAmount,
    cashValue, weedValue, cokeValue, goldValue, artsValue)

    local prefix = MPX()

    -- General Setup
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_PROGRESS"), selectedDifficulty, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_MISSIONS"), selectedApproach, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_WEAPONS"), selectedLoadout, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_TARGET"), selectedTarget, true)

    -- Compound Loot
    local lootTypes = {"CASH", "WEED", "COKE", "GOLD"}
    for _, loot in ipairs(lootTypes) do
        local value = (selectedCompoundTarget == loot) and selectedCompoundAmount or 0
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4LOOT_" .. loot .. "_C"), value, true)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4LOOT_" .. loot .. "_C_SCOPED"), value, true)
    end

    -- Island Loot
    for _, loot in ipairs(lootTypes) do
        local value = (selectedIslandTarget == loot) and selectedIslandAmount or 0
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4LOOT_" .. loot .. "_I"), value, true)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4LOOT_" .. loot .. "_I_SCOPED"), value, true)
    end

    -- Paintings
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4LOOT_PAINT"), selectedArtsAmount or 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4LOOT_PAINT_SCOPED"), selectedArtsAmount or 0, true)

    -- Loot Values
    local lootValues = {
        CASH = cashValue,
        WEED = weedValue,
        COKE = cokeValue,
        GOLD = goldValue,
    }

    for loot, value in pairs(lootValues) do
        local hasLoot = (selectedCompoundTarget == loot or selectedIslandTarget == loot)
        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4LOOT_" .. loot .. "_V"), hasLoot and value or 0, true)
    end

    -- Painting Value
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4LOOT_PAINT_V"), selectedArtsAmount > 0 and artsValue or 0, true)

    -- Optional Gear/Disruption
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_UNIFORM"), -1, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_GRAPPEL"), -1, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_TROJAN"), 5, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_WEP_DISRP"), 3, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_ARM_DISRP"), 3, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_HEL_DISRP"), 3, true)

    -- Trigger Save
    locals.set_int("heist_island_planning", 1568, 2)

    notification.show("Applied and completed preps for Cayo Perico!")
end

local function MPX()
    local charIndex = globals.get_int(1574927)
    return "MP" .. tostring(charIndex) .. "_"
end

-- Reset all Cayo Perico prep stats
local function reset_cayo_preps()
    local prefix = MPX()

    -- Full heist stat reset
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_PROGRESS"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_MISSIONS"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_APPROACH"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_TARGET"), -1, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_BS_GEN"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_BS_ENTR"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4CNF_BS_ABIL"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_PLAYTHROUGH_STATUS"), 0, true)

    -- Set local to force reload 
    locals.set_int("heist_island_planning", 1568, 2)

    notification.show("Cayo Perico preps have been reset.")
end

local cayoP1Cut = 100
local cayoP2Cut = 100
local cayoP3Cut = 100
local cayoP4Cut = 100

------------------End Cayo Section--------------------

------------------Casino Section--------------------
-- Silent & Sneaky approach
local function casino_silent_preset()
    local stat0, stat1

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_MASKS")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_MASKS")
    STATS.STAT_SET_INT(stat0, 4, true)
    STATS.STAT_SET_INT(stat1, 4, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_WEAPS")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_WEAPS")
    STATS.STAT_SET_INT(stat0, 1, true)
    STATS.STAT_SET_INT(stat1, 1, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_VEHS")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_VEHS")
    STATS.STAT_SET_INT(stat0, 3, true)
    STATS.STAT_SET_INT(stat1, 3, true)

    stat0 = MISC.GET_HASH_KEY("MP0_CAS_HEIST_FLOW")
    stat1 = MISC.GET_HASH_KEY("MP1_CAS_HEIST_FLOW")
    STATS.STAT_SET_INT(stat0, -1, true)
    STATS.STAT_SET_INT(stat1, -1, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3_LAST_APPROACH")
    stat1 = MISC.GET_HASH_KEY("MP1_H3_LAST_APPROACH")
    STATS.STAT_SET_INT(stat0, 0, true)
    STATS.STAT_SET_INT(stat1, 0, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_APPROACH")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_APPROACH")
    STATS.STAT_SET_INT(stat0, 1, true)
    STATS.STAT_SET_INT(stat1, 1, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3_HARD_APPROACH")
    stat1 = MISC.GET_HASH_KEY("MP1_H3_HARD_APPROACH")
    STATS.STAT_SET_INT(stat0, 1, true)
    STATS.STAT_SET_INT(stat1, 1, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_TARGET")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_TARGET")
    STATS.STAT_SET_INT(stat0, 3, true)
    STATS.STAT_SET_INT(stat1, 3, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_POI")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_POI")
    STATS.STAT_SET_INT(stat0, 1023, true)
    STATS.STAT_SET_INT(stat1, 1023, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_ACCESSPOINTS")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_ACCESSPOINTS")
    STATS.STAT_SET_INT(stat0, 2047, true)
    STATS.STAT_SET_INT(stat1, 2047, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_CREWWEAP")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_CREWWEAP")
    STATS.STAT_SET_INT(stat0, 4, true)
    STATS.STAT_SET_INT(stat1, 4, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_CREWDRIVER")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_CREWDRIVER")
    STATS.STAT_SET_INT(stat0, 3, true)
    STATS.STAT_SET_INT(stat1, 3, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_CREWHACKER")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_CREWHACKER")
    STATS.STAT_SET_INT(stat0, 4, true)
    STATS.STAT_SET_INT(stat1, 4, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_DISRUPTSHIP")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_DISRUPTSHIP")
    STATS.STAT_SET_INT(stat0, 3, true)
    STATS.STAT_SET_INT(stat1, 3, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_BODYARMORLVL")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_BODYARMORLVL")
    STATS.STAT_SET_INT(stat0, -1, true)
    STATS.STAT_SET_INT(stat1, -1, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_KEYLEVELS")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_KEYLEVELS")
    STATS.STAT_SET_INT(stat0, 2, true)
    STATS.STAT_SET_INT(stat1, 2, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_BITSET1")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_BITSET1")
    STATS.STAT_SET_INT(stat0, 127, true)
    STATS.STAT_SET_INT(stat1, 127, true)

    stat0 = MISC.GET_HASH_KEY("MP0_H3OPT_BITSET0")
    stat1 = MISC.GET_HASH_KEY("MP1_H3OPT_BITSET0")
    STATS.STAT_SET_INT(stat0, 262270, true)
    STATS.STAT_SET_INT(stat1, 262270, true)

    -- Reset the board 
    local chf0 = MISC.GET_HASH_KEY("MP0_CAS_HEIST_FLOW")
    local chf1 = MISC.GET_HASH_KEY("MP1_CAS_HEIST_FLOW")
    STATS.STAT_SET_INT(chf0, -1, true)
    STATS.STAT_SET_INT(chf1, -1, true)

    -- Save & refresh board
    STATS.STAT_SAVE(globals.get_int(1574927), true, 3, 0)
    script.sleep(100)
    locals.set_int("gb_casino_heist_planning", 210, 2)
    notification.show("Diamond Silent & Sneaky Preset Applied!")
end

-- The Big Con Approach
local function casino_big_con_preset()
    local prefix0 = "MP0_"
    local prefix1 = "MP1_"

    -- H3OPT_MASKS
    local H3OPT_MASKS0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_MASKS")
    local H3OPT_MASKS1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_MASKS")
    STATS.STAT_SET_INT(H3OPT_MASKS0, 2, true)
    STATS.STAT_SET_INT(H3OPT_MASKS1, 2, true)

    -- H3OPT_WEAPS
    local H3OPT_WEAPS0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_WEAPS")
    local H3OPT_WEAPS1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_WEAPS")
    STATS.STAT_SET_INT(H3OPT_WEAPS0, 1, true)
    STATS.STAT_SET_INT(H3OPT_WEAPS1, 1, true)

    -- H3OPT_VEHS
    local H3OPT_VEHS0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_VEHS")
    local H3OPT_VEHS1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_VEHS")
    STATS.STAT_SET_INT(H3OPT_VEHS0, 3, true)
    STATS.STAT_SET_INT(H3OPT_VEHS1, 3, true)

    -- CAS_HEIST_FLOW
    local CAS_HEIST_FLOW0 = MISC.GET_HASH_KEY(prefix0 .. "CAS_HEIST_FLOW")
    local CAS_HEIST_FLOW1 = MISC.GET_HASH_KEY(prefix1 .. "CAS_HEIST_FLOW")
    STATS.STAT_SET_INT(CAS_HEIST_FLOW0, -1, true)
    STATS.STAT_SET_INT(CAS_HEIST_FLOW1, -1, true)

    -- H3_LAST_APPROACH
    local H3_LAST_APPROACH0 = MISC.GET_HASH_KEY(prefix0 .. "H3_LAST_APPROACH")
    local H3_LAST_APPROACH1 = MISC.GET_HASH_KEY(prefix1 .. "H3_LAST_APPROACH")
    STATS.STAT_SET_INT(H3_LAST_APPROACH0, 0, true)
    STATS.STAT_SET_INT(H3_LAST_APPROACH1, 0, true)

    -- H3OPT_APPROACH
    local H3OPT_APPROACH0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_APPROACH")
    local H3OPT_APPROACH1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_APPROACH")
    STATS.STAT_SET_INT(H3OPT_APPROACH0, 2, true)
    STATS.STAT_SET_INT(H3OPT_APPROACH1, 2, true)

    -- H3_HARD_APPROACH
    local H3_HARD_APPROACH0 = MISC.GET_HASH_KEY(prefix0 .. "H3_HARD_APPROACH")
    local H3_HARD_APPROACH1 = MISC.GET_HASH_KEY(prefix1 .. "H3_HARD_APPROACH")
    STATS.STAT_SET_INT(H3_HARD_APPROACH0, 2, true)
    STATS.STAT_SET_INT(H3_HARD_APPROACH1, 2, true)

    -- H3OPT_TARGET
    local H3OPT_TARGET0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_TARGET")
    local H3OPT_TARGET1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_TARGET")
    STATS.STAT_SET_INT(H3OPT_TARGET0, 3, true)
    STATS.STAT_SET_INT(H3OPT_TARGET1, 3, true)

    -- H3OPT_POI
    local H3OPT_POI0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_POI")
    local H3OPT_POI1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_POI")
    STATS.STAT_SET_INT(H3OPT_POI0, 1023, true)
    STATS.STAT_SET_INT(H3OPT_POI1, 1023, true)

    -- H3OPT_ACCESSPOINTS
    local H3OPT_ACCESSPOINTS0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_ACCESSPOINTS")
    local H3OPT_ACCESSPOINTS1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_ACCESSPOINTS")
    STATS.STAT_SET_INT(H3OPT_ACCESSPOINTS0, 2047, true)
    STATS.STAT_SET_INT(H3OPT_ACCESSPOINTS1, 2047, true)

    -- H3OPT_CREWWEAP
    local H3OPT_CREWWEAP0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_CREWWEAP")
    local H3OPT_CREWWEAP1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_CREWWEAP")
    STATS.STAT_SET_INT(H3OPT_CREWWEAP0, 4, true)
    STATS.STAT_SET_INT(H3OPT_CREWWEAP1, 4, true)

    -- H3OPT_CREWDRIVER
    local H3OPT_CREWDRIVER0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_CREWDRIVER")
    local H3OPT_CREWDRIVER1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_CREWDRIVER")
    STATS.STAT_SET_INT(H3OPT_CREWDRIVER0, 3, true)
    STATS.STAT_SET_INT(H3OPT_CREWDRIVER1, 3, true)

    -- H3OPT_CREWHACKER
    local H3OPT_CREWHACKER0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_CREWHACKER")
    local H3OPT_CREWHACKER1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_CREWHACKER")
    STATS.STAT_SET_INT(H3OPT_CREWHACKER0, 4, true)
    STATS.STAT_SET_INT(H3OPT_CREWHACKER1, 4, true)

    -- H3OPT_DISRUPTSHIP
    local H3OPT_DISRUPTSHIP0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_DISRUPTSHIP")
    local H3OPT_DISRUPTSHIP1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_DISRUPTSHIP")
    STATS.STAT_SET_INT(H3OPT_DISRUPTSHIP0, 3, true)
    STATS.STAT_SET_INT(H3OPT_DISRUPTSHIP1, 3, true)

    -- H3OPT_BODYARMORLVL
    local H3OPT_BODYARMORLVL0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_BODYARMORLVL")
    local H3OPT_BODYARMORLVL1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_BODYARMORLVL")
    STATS.STAT_SET_INT(H3OPT_BODYARMORLVL0, -1, true)
    STATS.STAT_SET_INT(H3OPT_BODYARMORLVL1, -1, true)

    -- H3OPT_KEYLEVELS
    local H3OPT_KEYLEVELS0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_KEYLEVELS")
    local H3OPT_KEYLEVELS1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_KEYLEVELS")
    STATS.STAT_SET_INT(H3OPT_KEYLEVELS0, 2, true)
    STATS.STAT_SET_INT(H3OPT_KEYLEVELS1, 2, true)

    -- H3OPT_BITSET1
    local H3OPT_BITSET10 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_BITSET1")
    local H3OPT_BITSET11 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_BITSET1")
    STATS.STAT_SET_INT(H3OPT_BITSET10, 159, true)
    STATS.STAT_SET_INT(H3OPT_BITSET11, 159, true)

    -- H3OPT_BITSET0
    local H3OPT_BITSET00 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_BITSET0")
    local H3OPT_BITSET01 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_BITSET0")
    STATS.STAT_SET_INT(H3OPT_BITSET00, 524118, true)
    STATS.STAT_SET_INT(H3OPT_BITSET01, 524118, true)

    -- Reset the board
    local CAS_HEIST_FLOW0 = MISC.GET_HASH_KEY(prefix0 .. "CAS_HEIST_FLOW")
    local CAS_HEIST_FLOW1 = MISC.GET_HASH_KEY(prefix1 .. "CAS_HEIST_FLOW")
    STATS.STAT_SET_INT(CAS_HEIST_FLOW0, -1, true)
    STATS.STAT_SET_INT(CAS_HEIST_FLOW1, -1, true)

    -- Save & refresh board
    STATS.STAT_SAVE(globals.get_int(1574927), true, 3, 0)
    script.sleep(100)
    locals.set_int("gb_casino_heist_planning", 210, 2)
    notification.show("Diamond The Big Con Preset Applied!")
end

-- Aggressive approach 
local function casino_aggressive_preset()

    local prefix0 = "MP0_"
    local prefix1 = "MP1_"

    -- H3OPT_MASKS
    local H3OPT_MASKS0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_MASKS")
    local H3OPT_MASKS1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_MASKS")
    STATS.STAT_SET_INT(H3OPT_MASKS0, 4, true)
    STATS.STAT_SET_INT(H3OPT_MASKS1, 4, true)

    -- H3OPT_WEAPS
    local H3OPT_WEAPS0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_WEAPS")
    local H3OPT_WEAPS1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_WEAPS")
    STATS.STAT_SET_INT(H3OPT_WEAPS0, 1, true)
    STATS.STAT_SET_INT(H3OPT_WEAPS1, 1, true)

    -- H3OPT_VEHS
    local H3OPT_VEHS0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_VEHS")
    local H3OPT_VEHS1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_VEHS")
    STATS.STAT_SET_INT(H3OPT_VEHS0, 3, true)
    STATS.STAT_SET_INT(H3OPT_VEHS1, 3, true)

    -- CAS_HEIST_FLOW
    local CAS_HEIST_FLOW0 = MISC.GET_HASH_KEY(prefix0 .. "CAS_HEIST_FLOW")
    local CAS_HEIST_FLOW1 = MISC.GET_HASH_KEY(prefix1 .. "CAS_HEIST_FLOW")
    STATS.STAT_SET_INT(CAS_HEIST_FLOW0, -1, true)
    STATS.STAT_SET_INT(CAS_HEIST_FLOW1, -1, true)

    -- H3_LAST_APPROACH
    local H3_LAST_APPROACH0 = MISC.GET_HASH_KEY(prefix0 .. "H3_LAST_APPROACH")
    local H3_LAST_APPROACH1 = MISC.GET_HASH_KEY(prefix1 .. "H3_LAST_APPROACH")
    STATS.STAT_SET_INT(H3_LAST_APPROACH0, 0, true)
    STATS.STAT_SET_INT(H3_LAST_APPROACH1, 0, true)

    -- H3OPT_APPROACH
    local H3OPT_APPROACH0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_APPROACH")
    local H3OPT_APPROACH1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_APPROACH")
    STATS.STAT_SET_INT(H3OPT_APPROACH0, 3, true)
    STATS.STAT_SET_INT(H3OPT_APPROACH1, 3, true)

    -- H3_HARD_APPROACH
    local H3_HARD_APPROACH0 = MISC.GET_HASH_KEY(prefix0 .. "H3_HARD_APPROACH")
    local H3_HARD_APPROACH1 = MISC.GET_HASH_KEY(prefix1 .. "H3_HARD_APPROACH")
    STATS.STAT_SET_INT(H3_HARD_APPROACH0, 3, true)
    STATS.STAT_SET_INT(H3_HARD_APPROACH1, 3, true)

    -- H3OPT_TARGET
    local H3OPT_TARGET0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_TARGET")
    local H3OPT_TARGET1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_TARGET")
    STATS.STAT_SET_INT(H3OPT_TARGET0, 3, true)
    STATS.STAT_SET_INT(H3OPT_TARGET1, 3, true)

    -- H3OPT_POI
    local H3OPT_POI0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_POI")
    local H3OPT_POI1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_POI")
    STATS.STAT_SET_INT(H3OPT_POI0, 1023, true)
    STATS.STAT_SET_INT(H3OPT_POI1, 1023, true)

    -- H3OPT_ACCESSPOINTS
    local H3OPT_ACCESSPOINTS0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_ACCESSPOINTS")
    local H3OPT_ACCESSPOINTS1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_ACCESSPOINTS")
    STATS.STAT_SET_INT(H3OPT_ACCESSPOINTS0, 2047, true)
    STATS.STAT_SET_INT(H3OPT_ACCESSPOINTS1, 2047, true)

    -- H3OPT_CREWWEAP
    local H3OPT_CREWWEAP0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_CREWWEAP")
    local H3OPT_CREWWEAP1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_CREWWEAP")
    STATS.STAT_SET_INT(H3OPT_CREWWEAP0, 4, true)
    STATS.STAT_SET_INT(H3OPT_CREWWEAP1, 4, true)

    -- H3OPT_CREWDRIVER
    local H3OPT_CREWDRIVER0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_CREWDRIVER")
    local H3OPT_CREWDRIVER1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_CREWDRIVER")
    STATS.STAT_SET_INT(H3OPT_CREWDRIVER0, 3, true)
    STATS.STAT_SET_INT(H3OPT_CREWDRIVER1, 3, true)

    -- H3OPT_CREWHACKER
    local H3OPT_CREWHACKER0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_CREWHACKER")
    local H3OPT_CREWHACKER1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_CREWHACKER")
    STATS.STAT_SET_INT(H3OPT_CREWHACKER0, 4, true)
    STATS.STAT_SET_INT(H3OPT_CREWHACKER1, 4, true)

    -- H3OPT_DISRUPTSHIP
    local H3OPT_DISRUPTSHIP0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_DISRUPTSHIP")
    local H3OPT_DISRUPTSHIP1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_DISRUPTSHIP")
    STATS.STAT_SET_INT(H3OPT_DISRUPTSHIP0, 3, true)
    STATS.STAT_SET_INT(H3OPT_DISRUPTSHIP1, 3, true)

    -- H3OPT_BODYARMORLVL
    local H3OPT_BODYARMORLVL0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_BODYARMORLVL")
    local H3OPT_BODYARMORLVL1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_BODYARMORLVL")
    STATS.STAT_SET_INT(H3OPT_BODYARMORLVL0, -1, true)
    STATS.STAT_SET_INT(H3OPT_BODYARMORLVL1, -1, true)

    -- H3OPT_KEYLEVELS
    local H3OPT_KEYLEVELS0 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_KEYLEVELS")
    local H3OPT_KEYLEVELS1 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_KEYLEVELS")
    STATS.STAT_SET_INT(H3OPT_KEYLEVELS0, 2, true)
    STATS.STAT_SET_INT(H3OPT_KEYLEVELS1, 2, true)

    -- H3OPT_BITSET1
    local H3OPT_BITSET10 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_BITSET1")
    local H3OPT_BITSET11 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_BITSET1")
    STATS.STAT_SET_INT(H3OPT_BITSET10, 799, true)
    STATS.STAT_SET_INT(H3OPT_BITSET11, 799, true)

    -- H3OPT_BITSET0
    local H3OPT_BITSET00 = MISC.GET_HASH_KEY(prefix0 .. "H3OPT_BITSET0")
    local H3OPT_BITSET01 = MISC.GET_HASH_KEY(prefix1 .. "H3OPT_BITSET0")
    STATS.STAT_SET_INT(H3OPT_BITSET00, 3670102, true)
    STATS.STAT_SET_INT(H3OPT_BITSET01, 3670102, true) 

    -- Reset the board
    local CAS_HEIST_FLOW0 = MISC.GET_HASH_KEY(prefix0 .. "CAS_HEIST_FLOW")
    local CAS_HEIST_FLOW1 = MISC.GET_HASH_KEY(prefix1 .. "CAS_HEIST_FLOW")
    STATS.STAT_SET_INT(CAS_HEIST_FLOW0, -1, true)
    STATS.STAT_SET_INT(CAS_HEIST_FLOW1, -1, true)

    -- Save & refresh board
    STATS.STAT_SAVE(globals.get_int(1574927), true, 3, 0)
    script.sleep(100)
    locals.set_int("gb_casino_heist_planning", 210, 2)
    notification.show(("Diamond Aggressive Preset Applied!"))
end

-- reset casino heist prep stats
local function reset_casino_preps()
    -- reset preps casino

    local prefix0 = "MP0_"
    local prefix1 = "MP1_"

    -- H3OPT_DISRUPTSHIP
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_DISRUPTSHIP"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_DISRUPTSHIP"), 0, true)

    -- H3OPT_BODYARMORLVL
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_BODYARMORLVL"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_BODYARMORLVL"), 0, true)

    -- H3OPT_CREWWEAP
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_CREWWEAP"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_CREWWEAP"), 0, true)

    -- H3OPT_CREWDRIVER
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_CREWDRIVER"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_CREWDRIVER"), 0, true)

    -- H3OPT_CREWHACKER
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_CREWHACKER"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_CREWHACKER"), 0, true)

    -- H3OPT_KEYLEVELS
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_KEYLEVELS"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_KEYLEVELS"), 0, true)

    -- H3OPT_MODVEH
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_MODVEH"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_MODVEH"), 0, true)

    -- H3OPT_MASKS
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_MASKS"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_MASKS"), 0, true)

    -- H3OPT_WEAPS
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_WEAPS"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_WEAPS"), 0, true)

    -- H3OPT_VEHS
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_VEHS"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_VEHS"), 0, true)

    -- H3OPT_APPROACH
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_APPROACH"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_APPROACH"), 0, true)

    -- H3OPT_BITSET0
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_BITSET0"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_BITSET0"), 0, true)

    -- H3OPT_ACCESSPOINTS
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_ACCESSPOINTS"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_ACCESSPOINTS"), 0, true)

    -- H3OPT_TARGET
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_TARGET"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_TARGET"), 0, true)

    -- H3OPT_POI
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_POI"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_POI"), 0, true)

    -- H3OPT_BITSET1
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_BITSET1"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_BITSET1"), 0, true)

    -- H3_PARTIALPASS
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3_PARTIALPASS"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3_PARTIALPASS"), 0, true)

    -- CAS_HEIST_NOTS
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "CAS_HEIST_NOTS"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "CAS_HEIST_NOTS"), 0, true)

    -- CAS_HEIST_FLOW (set to -1)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "CAS_HEIST_FLOW"), -1, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "CAS_HEIST_FLOW"), -1, true)

    -- H3_LAST_APPROACH
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3_LAST_APPROACH"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3_LAST_APPROACH"), 0, true)

    -- H3_HARD_APPROACH
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3_HARD_APPROACH"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3_HARD_APPROACH"), 0, true)

    -- H3_SKIPCOUNT
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3_SKIPCOUNT"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3_SKIPCOUNT"), 0, true)

    -- H3_MISSIONSKIPPED
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3_MISSIONSKIPPED"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3_MISSIONSKIPPED"), 0, true)

    -- H3_BOARD_DIALOGUE0
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3_BOARD_DIALOGUE0"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3_BOARD_DIALOGUE0"), 0, true)

    -- H3_BOARD_DIALOGUE1
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3_BOARD_DIALOGUE1"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3_BOARD_DIALOGUE1"), 0, true)

    -- H3_BOARD_DIALOGUE2
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3_BOARD_DIALOGUE2"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3_BOARD_DIALOGUE2"), 0, true)

    -- H3_VEHICLESUSED
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3_VEHICLESUSED"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3_VEHICLESUSED"), 0, true)

    -- MPPLY_H3_COOLDOWN
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "MPPLY_H3_COOLDOWN"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "MPPLY_H3_COOLDOWN"), 0, true)

    -- H3_COMPLETEDPOSIX
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3_COMPLETEDPOSIX"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3_COMPLETEDPOSIX"), 0, true)

    -- Save & refresh board
    STATS.STAT_SAVE(globals.get_int(1574927), true, 3, 0)
    script.sleep(100)
    locals.set_int("gb_casino_heist_planning", 210, 2)
    notification.show("Heist Preperations Are Reset!")
end

-- instant finish casino heist
local function instant_finish_casino_heist()
    local prefix0 = "MP0_"
    local prefix1 = "MP1_"

    network.force_script_host("fm_mission_controller")
    script.yield(1000)

    -- based on approach selected cuz agressive is a pain in the bum
    if	STATS.STAT_GET_INT(MISC.GET_HASH_KEY(prefix0 .. "H3OPT_APPROACH") == 3)
	or 
        STATS.STAT_GET_INT(MISC.GET_HASH_KEY(prefix1 .. "H3OPT_APPROACH") == 3)
	then
        -- Agressive
        locals.set_int("fm_mission_controller", 20391, 12)
        locals.set_int("fm_mission_controller", 22132, 80)
        locals.set_int("fm_mission_controller", 23077, 10000000)
        locals.set_int("fm_mission_controller", 29012, 99999)
        locals.set_int("fm_mission_controller", 32536, 99999)
		notification.show("Instantly Complete Heist...")

    else --Big con and Silent
        locals.set_int("fm_mission_controller", 21453, 5)          
        locals.set_int("fm_mission_controller", 22132, 80)         
        locals.set_int("fm_mission_controller", 23077, 10000000)   
        locals.set_int("fm_mission_controller", 29012, 99999)      
        locals.set_int("fm_mission_controller", 32536, 99999)      
		notification.show("Instantly Complete Heist...")
    end
end

local hostCut = 120
local p2Cut = 120
local p3Cut = 120
local p4Cut = 120

------------------End Casino Section--------------------

------------------Start dooms Section--------------------
local function applyDoomsdayAct1Preps()
    local prefix0 = "MP0_"
    local prefix1 = "MP1_"

    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_FLOW_MISSION_PROG"), 503, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_FLOW_MISSION_PROG"), 503, true)

    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_HEIST_STATUS"), -229383, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_HEIST_STATUS"), -229383, true)

    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_FLOW_NOTIFICATIONS"), 1557, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_FLOW_NOTIFICATIONS"), 1557, true)


    locals.set_int("gb_gang_ops_planning", 209, 6)
	STATS.STAT_SAVE(globals.get_int(1574927), true, 3, 0)

    notification.show("Act I Preps Applied - Data Breach")
end

local function applyDoomsdayAct2Preps()
    local prefix0 = "MP0_"
    local prefix1 = "MP1_"

    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_FLOW_MISSION_PROG"), 240, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_FLOW_MISSION_PROG"), 240, true)

    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_HEIST_STATUS"), -229378, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_HEIST_STATUS"), -229378, true)

    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_FLOW_NOTIFICATIONS"), 1557, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_FLOW_NOTIFICATIONS"), 1557, true)

    locals.set_int("gb_gang_ops_planning", 209, 6)
	STATS.STAT_SAVE(globals.get_int(1574927), true, 3, 0)

    notification.show("Act II Preps Applied - The Bogdan Problem")
end

local function applyDoomsdayAct3Preps()
    local prefix0 = "MP0_"
    local prefix1 = "MP1_"

    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_FLOW_MISSION_PROG"), 16368, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_FLOW_MISSION_PROG"), 16368, true)

    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_HEIST_STATUS"), -229380, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_HEIST_STATUS"), -229380, true)

    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_FLOW_NOTIFICATIONS"), 1557, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_FLOW_NOTIFICATIONS"), 1557, true)

    locals.set_int("gb_gang_ops_planning", 209, 6)
	STATS.STAT_SAVE(globals.get_int(1574927), true, 3, 0)

    notification.show("Act III Preps Applied - The Doomsday Scenario")
end

local function resetDoomsdayPreps()
    local prefix0 = "MP0_"
    local prefix1 = "MP1_"


    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_FLOW_MISSION_PROG"), 503, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_FLOW_MISSION_PROG"), 503, true)

    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_HEIST_STATUS"), 0, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_HEIST_STATUS"), 0, true)


    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix0 .. "GANGOPS_FLOW_NOTIFICATIONS"), 1557, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix1 .. "GANGOPS_FLOW_NOTIFICATIONS"), 1557, true)

    -- Force reload of the planning screen
    locals.set_int("gb_gang_ops_planning", 209, 6)
	STATS.STAT_SAVE(globals.get_int(1574927), true, 3, 0)


    notification.show("Doomsday Heist Has Been Reset.")
end

local function applyDoomsdayAct1MaxCuts()
    local base = 1965032
    globals.set_int(base + 1, 261)
    globals.set_int(base + 2, 261)
    globals.set_int(base + 3, 261)
    globals.set_int(base + 4, 261)
    notification.show("Act I Max Cuts Applied - Data Breach")
end

local function applyDoomsdayAct2MaxCuts()
    local base = 1965032
    globals.set_int(base + 1, 178)
    globals.set_int(base + 2, 178)
    globals.set_int(base + 3, 178)
    globals.set_int(base + 4, 178)
    notification.show("Act II Max Cuts Applied - The Bogdan Problem")
end

local function applyDoomsdayAct3MaxCuts()
    local base = 1965032
    globals.set_int(base + 1, 141)
    globals.set_int(base + 2, 141)
    globals.set_int(base + 3, 141)
    globals.set_int(base + 4, 141)
    notification.show("Act III Max Cuts Applied - The Doomsday Scenario")
end

local function instant_finish_Doomsday_heist()
    network.force_script_host("fm_mission_controller")
    script.yield(1000)


    locals.set_int("fm_mission_controller", 20391 + 1062, 5)

    locals.set_int("fm_mission_controller", 20391 + 1232 + 1, 999999)

    function set_bits(value, positions)
        for _, position in ipairs(positions) do
            value = value | (1 << position)
        end
        return value
    end

    local current_value = locals.get_int("fm_mission_controller", 20391 + 1)
    local new_value = set_bits(current_value, { 9, 16 })
    locals.set_int("fm_mission_controller", 20391 + 1, new_value)
end

local function SkipAllDoomsCheckpoints()
    local offset = 20391 + 2
	local offset1 = 54763 + 2
    local bitToSet = (1 << 17)

	network.force_script_host("fm_mission_controller")
	script.yield(1000)
	

    local currentVal = locals.get_int("fm_mission_controller", offset)
    locals.set_int("fm_mission_controller", offset, currentVal | bitToSet)
	local currentVal = locals.get_int("fm_mission_controller_2020", offset)
    locals.set_int("fm_mission_controller_2020", offset1, currentVal | bitToSet)

    notification.show("Skipping Checkpoint...")
end

local DoomsdayHostCut = 120
local Doomsdayp2Cut = 120
local Doomsdayp3Cut = 120
local Doomsdayp4Cut = 120

------------------End dooms Section--------------------

------------------Start agency Section--------------------
-- local selectedContractIndex = 3 -- Default to "None"

local contracts = {
    "None", 
    "Nightclub", 
    "Marina", 
    "Nightlife Leak",
    "Country Club", 
    "Guest List", 
    "High Soc. Leak",
    "Davis", 
    "Ballas", 
    "South Central Leak", 
    "Studio Time", 
    "Don't # W. Dre"
}

local contract_ids = {
    3,      -- none 
    4,      -- nightclub
    12,     -- Marina
    28,     -- etc...
    60, 
    123, 
    254, 
    508, 
    1020, 
    2044, 
    2045, 
    4095
}

local function applyContract(value)
    -- Get active character slot (0 or 1)
    local mpx = PLAYER.GET_PLAYER_INDEX()
    local prefix = "MP" .. mpx .. "_"

    -- Set contract ID
    local contractHash = MISC.GET_HASH_KEY(prefix .. "FIXER_STORY_BS")
    STATS.STAT_SET_INT(contractHash, value, true)

    -- Determine strand value based on contract index
    local strand = -1
    if value < 18 then
        strand = 0
    elseif value < 128 then
        strand = 1
    elseif value < 2044 then
        strand = 2
    end

    -- Set FIXER_STORY_STRAND
    local strandHash = MISC.GET_HASH_KEY(prefix .. "FIXER_STORY_STRAND")
    STATS.STAT_SET_INT(strandHash, strand, true)

    -- Set GENERAL_BS and COMPLETED_BS to -1
    local generalHash = MISC.GET_HASH_KEY(prefix .. "FIXER_GENERAL_BS")
    local completedHash = MISC.GET_HASH_KEY(prefix .. "FIXER_COMPLETED_BS")
    STATS.STAT_SET_INT(generalHash, -1, true)
    STATS.STAT_SET_INT(completedHash, -1, true)

    notification.show("Applied Contract And Completed Preps, Change Session To Apply")
end

local function instant_finish_agency_final()
    local script_name = "fm_mission_controller_2020"
    network.force_script_host("fm_mission_controller_2020")
    script.yield(1000)


    local base = 54763
    local step1_offset = base + 1589
    local step2_offset = base + 1776 + 1
    local step3_offset = base + 1


    locals.set_int(script_name, step1_offset, 5)

 
    locals.set_int(script_name, step2_offset, 999999)


    local value = locals.get_int(script_name, step3_offset)
    value = value | (1 << 9)
    value = value | (1 << 16)
    locals.set_int(script_name, step3_offset, value)

    notification.show("Instant Finished Agency Finale")
end

------------------End agency Section--------------------

------------------Start Autoshop Section--------------------
-- local selectedAutoShopContractIndex = -1 -- Default to "None"

local autoShopContracts = {
    "None", 
    "Union Depository", 
    "SuperDollar Deal", 
    "Bank Contract",
    "ECU Work", 
    "Prison Contract", 
    "Agency Deal",
    "Lost Contract", 
    "Data Contract"
}

local autoShopContracts_ids = {
    -1,      -- none 
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7
}

local function apply_and_complete_auto_shop(value)
    if value < 0 then
        notification.show("No valid contract selected to apply.")
        return
    end

    local activeChar = globals.get_int(1574927, true, 3, 0) or 0
    

    local prefix = ("MP%d_"):format(activeChar)
    local statTunerCurrent = prefix .. "TUNER_CURRENT"
    local statTunerGenBs = prefix .. "TUNER_GEN_BS"

    local hashTunerCurrent = MISC.GET_HASH_KEY(statTunerCurrent)
    local hashTunerGenBs = MISC.GET_HASH_KEY(statTunerGenBs)

    STATS.STAT_SET_INT(hashTunerCurrent, value, true)

    local gen_bs_value = (value == 1) and 4351 or 12543
    STATS.STAT_SET_INT(hashTunerGenBs, gen_bs_value, true)

    locals.set_int("tuner_planning", 406, 2)

    notification.show("Applied Contract And Completed Preps, Change Session To Apply")
end


------------------End Autoshop Section--------------------

------------------Start Salvage Section--------------------
------------------End Salvage Section--------------------

------------------Start ClassicHeist Section--------------------
local classic_cut1 = 100
local classic_cut2 = 100
local classic_cut3 = 100
local classic_cut4 = 100

local function classic_heist_instant_()
    -- Force script host
    network.force_script_host("fm_mission_controller")
    script.yield(1000)

    -- Read current apartment heist type
    local playerId = PLAYER.PLAYER_ID()
    local heistTypeGlobal = 1877086 + 1 + (playerId * 77) + 24 + 1
    local heistType = globals.get_int(heistTypeGlobal)

    -- Heist type for Pacific Standard
    local PACIFIC_STANDARD = 1182286714

    if heistType == PACIFIC_STANDARD then
        -- Finish for Pacific Standard Job
        locals.set_int("fm_mission_controller", 20391 + 1062, 5)        
        locals.set_int("fm_mission_controller", 20391 + 1740 + 1, 80)   
        locals.set_int("fm_mission_controller", 20391 + 2686, 10000000)  
        locals.set_int("fm_mission_controller", 29011 + 1, 99999)        
        locals.set_int("fm_mission_controller", 32467 + 1 + 68, 99999)   
    else
        --finish for other Classic Heists
        locals.set_int("fm_mission_controller", 20391, 12)               
        locals.set_int("fm_mission_controller", 20391 + 2686, 99999)     
        locals.set_int("fm_mission_controller", 29011 + 1, 99999)        
        locals.set_int("fm_mission_controller", 32467 + 1 + 68, 99999)   
    end

    notification.show("Instantly Complete Heist")
end

local function unlockAllClassicHeist()
    -- Fleeca
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_SAVED_STRAND_0"), 914229232, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_SAVED_STRAND_0_L"), 5, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_SAVED_STRAND_0"), 914229232, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_SAVED_STRAND_0_L"), 5, true)

    -- Prison Break
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_SAVED_STRAND_1"), 648305506, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_SAVED_STRAND_1_L"), 5, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_SAVED_STRAND_1"), 648305506, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_SAVED_STRAND_1_L"), 5, true)

    -- Humane Labs
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_SAVED_STRAND_2"), 3046362882, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_SAVED_STRAND_2_L"), 5, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_SAVED_STRAND_2"), 3046362882, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_SAVED_STRAND_2_L"), 5, true)

    -- Series A
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_SAVED_STRAND_3"), 2332217394, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_SAVED_STRAND_3_L"), 5, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_SAVED_STRAND_3"), 2332217394, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_SAVED_STRAND_3_L"), 5, true)

    -- Pacific Standard
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_SAVED_STRAND_4"), 3637220192, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_SAVED_STRAND_4_L"), 5, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_SAVED_STRAND_4"), 3637220192, true)
    STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_SAVED_STRAND_4_L"), 5, true)

    notification.show("Unlocked All Apartment Heists -> Please Restart Game To Apply.")
end

local function classic_apply_cuts(cut1, cut2, cut3, cut4)
    local base_global = 1931800
    local base_local = 1933768 + 3008

    local total_cut = cut1 + cut2 + cut3 + cut4
    local over_cap = total_cut - 100

    if over_cap > 0 then
        globals.set_int(base_global + 1 + 1, -over_cap)
    else
        globals.set_int(base_global + 1 + 1, 0)
    end

    globals.set_int(base_global + 1 + 2, cut2)
    globals.set_int(base_global + 1 + 3, cut3)
    globals.set_int(base_global + 1 + 4, cut4)

    globals.set_int(base_local + 1, cut1)
    globals.set_int(base_local + 2, cut2)
    globals.set_int(base_local + 3, cut3)
    globals.set_int(base_local + 4, cut4)

end


------------------End ClassicHeist Section-------------------

------------------Start Miscellaneous Section--------------------
local function setBit(addr, bit)
    globals.set_int(addr, globals.get_int(addr) | (1 << bit))
end
------------------End Miscellaneous Section--------------------

------------------End Content Section--------------------

menu.on_draw(function()
    if ImGui.BeginTabBar("MainBar1") then -- FIRST MAIN BAR
        if ImGui.BeginTabItem("Intro/Warnings") then -- Intro Tab Item
            ImGui.Text("Thank you for using Heist Tool V2.3")
            ImGui.Text("Owner: @prizely, Credit to @Jefbxl")
            ImGui.Separator()
            ImGui.Text("======== !!! READ ME !!! ========")
            ImGui.Text("1. Some features may cause crashes or unresponsiveness. If you encounter any issues, please contact me.")
            ImGui.Text("2. Updates are irregular.")
            ImGui.Text("3. The script is primarily focused on money-related functions, which may carry risks.")
            ImGui.Text("4. Note: When modifying cuts, exceeding 100% may result in errors and prevent payouts.")
            ImGui.Text("5. Any feature that allows value modification can be toggled with the Tab key.")
            ImGui.Separator()
            ImGui.Text("If you have any questions/bugs, please contact me on Discord: @prizely")
            ImGui.Text("Special thanks to: @Jefbxl, @sz, @Elfish-Tweaker for helping!!")
            ImGui.EndTabItem()
        end

        if ImGui.BeginTabItem("Cayo") then -- Cayo Perico Heist Tab Item
            if ImGui.BeginTabBar("CayoFeatures1") then -- Cayo bar
                if ImGui.BeginTabItem("Prep Option") then -- prep tab
                    ImGui.Text("Default max payout $2,550,000")
                    
                    ImGui.Separator()

                    if ImGui.Button("Apply##1") then
                        unlockAllCayoPOI()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Unlock all Points of Interest")
                    
                    ImGui.Separator()

                    if ImGui.Button("Apply##2") then
                        applyPreps(
                            131055,
                            65283,
                            1,
                            5,
                            "GOLD",
                            255,
                            127,
                            "GOLD",
                            16777215,
                            83250,
                            135000,
                            202500,
                            333333,
                            180000
                        )
                    end
                    ImGui.SameLine()
                    ImGui.Text("Apply Preps")
                    
                    ImGui.Separator()

                    if ImGui.Button("Apply##3") then
                        reset_cayo_preps()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Reset Cayo Preps")


                    ImGui.Separator()

                    ImGui.Text("Custom Prep Option (Please confirm after selection)")
                    ImGui.Text("Select Difficulty:")
                    for _, diff in ipairs(difficulties) do
                        if ImGui.RadioButton(diff.name, selectedDifficulty == diff.index) then
                            selectedDifficulty = diff.index
                            notification.show("Selected Difficulty: " .. diff.name)
                        end
                        ImGui.SameLine()
                    end
                    ImGui.NewLine()

                    ImGui.Text("Select Approach:")
                    for _, approach in ipairs(approaches) do
                        if ImGui.RadioButton(approach.name, selectedApproach == approach.index) then
                            selectedApproach = approach.index
                            notification.show("Selected Approach: " .. approach.name)
                        end
                        ImGui.SameLine()
                    end
                    ImGui.NewLine()

                    ImGui.Text("Select Loadout:")
                    for _, loadout in ipairs(loadouts) do
                        if ImGui.RadioButton(loadout.name, selectedLoadout == loadout.index) then
                            selectedLoadout = loadout.index
                            notification.show("Selected Loadout: " .. loadout.name)
                        end
                        ImGui.SameLine()
                    end
                    ImGui.NewLine()

                    ImGui.Text("Select Primary Target:")
                    for _, target in ipairs(targets) do
                        if ImGui.RadioButton(target.name, selectedTarget == target.index) then
                            selectedTarget = target.index
                            notification.show("Selected Primary Target: " .. target.name)
                        end
                        ImGui.SameLine()
                    end
                    ImGui.NewLine()

                    ImGui.Text("Select Secondary Target:")
                    for _, secTarget in ipairs(secondaryTargets) do
                        if ImGui.RadioButton(secTarget.name, selectedCompoundTarget == secTarget.index) then
                            selectedCompoundTarget = secTarget.index
                            notification.show("Selected Secondary Target: " .. secTarget.name)
                        end
                        ImGui.SameLine()
                    end
                    ImGui.NewLine()

                    if ImGui.Button("Confirm and Apply") then
                        locals.set_int("heist_island_planning", 1568, 2)
                        notification.show("Applied and reloaded planning screen")
                    end
                    
                    ImGui.EndTabItem()
                end

                if ImGui.BeginTabItem("Others") then -- other features tab
                    ImGui.Text("Island Features")
                
                    if ImGui.Button("Apply##4") then
                        locals.set_int("heist_island_planning", 1568, 2)
                        notification.show("Applied and reloaded planning screen")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Reload Planning Screen")

                    if ImGui.Button("Apply##5") then
                        locals.set_int("fm_mission_controller_2020", 25460, 5)
                        notification.show("Bypassed Fingerprint Hack")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Bypass Fingerprint Hack")

                    if ImGui.Button("Apply##6") then
                        locals.set_float("fm_mission_controller_2020", 31525 + 3, 100.0)
                        notification.show("Bypassed Plasma Cutter")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Bypass Plasma Cutter")

                    if ImGui.Button("Apply##7") then
                        locals.set_int("fm_mission_controller_2020", 30285, 6)
                        notification.show("Bypassed Drainage Pipe Cut")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Bypass Drainage Pipe Cut")

                    ImGui.Separator()

                    local function MPX()
                        local charIndex = globals.get_int(1574927)
                        return "MP" .. tostring(charIndex) .. "_"
                    end

                    if ImGui.Button("Apply##8") then
                        local prefix = MPX()
                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_TARGET_POSIX"), 1659643454, true)
                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_COOLDOWN"), 0, true)
                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_COOLDOWN_HARD"), 0, true)
                        notification.show("Removed Solo Cooldown")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Removed Solo Cooldown")

                    if ImGui.Button("Apply##9") then
                        local prefix = MPX()
                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_TARGET_POSIX"), 1659429119, true)
                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_COOLDOWN"), 0, true)
                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "H4_COOLDOWN_HARD"), 0, true)
                        notification.show("Removed Team Cooldown")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Remove Team Cooldown")

                    ImGui.EndTabItem()
                end
                
                if ImGui.BeginTabItem("Set Player Cuts (Risky)") then -- change player cuts tab
                    ImGui.Text("Set Player Cuts")

                    cayoP1Cut, _ = ImGui.SliderInt("Player 1 Cut", cayoP1Cut, 0, 100)
                    cayoP2Cut, _ = ImGui.SliderInt("Player 2 Cut", cayoP2Cut, 0, 100)
                    cayoP3Cut, _ = ImGui.SliderInt("Player 3 Cut", cayoP3Cut, 0, 100)
                    cayoP4Cut, _ = ImGui.SliderInt("Player 4 Cut", cayoP4Cut, 0, 100)

                    if ImGui.Button("ApplyPayout##1") then
                        script.run_in_fiber(function()
                            globals.set_int(1975799 + 831 + 56 + 1, cayoP1Cut)
                            globals.set_int(1975799 + 831 + 56 + 2, cayoP2Cut)
                            globals.set_int(1975799 + 831 + 56 + 3, cayoP3Cut)
                            globals.set_int(1975799 + 831 + 56 + 4, cayoP4Cut)
                            notification.show("Player Cuts Applied") -- applied message
                        end)
                    end

                    ImGui.Separator()

                    if ImGui.Button("Apply##12") then
                        -- Force script host
                        network.force_script_host("fm_mission_controller_2020")
                        script.yield(1000)

                        -- Force Player 
                        globals.set_int(1976911 + 1 + (1 * 27) + 7 + 1, 1)
                        globals.set_int(1976911 + 1 + (1 * 27) + 7 + 2, 1) 
                        globals.set_int(1976911 + 1 + (2 * 27) + 7 + 3, 1) 
                        globals.set_int(1976911 + 1 + (3 * 27) + 7 + 4, 1) 
                        notification.show("Everyone Has Been Forced Ready")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Force Players Ready Cayo")

                    ImGui.EndTabItem()
                end

                ImGui.EndTabBar()
            end

            ImGui.EndTabItem()
        end

        if ImGui.BeginTabItem("Casino") then -- Casino Heist Tab Item
            if ImGui.BeginTabBar("CasinoFeatures1") then -- Casino bar
                if ImGui.BeginTabItem("Prep Option") then -- prep tab
                    ImGui.Text("Default max payout $3,619,000")

                    ImGui.Separator()

                    if ImGui.Button("Apply##13") then
                        STATS.SET_PACKED_STAT_BOOL_CODE(27227, true, 1)
                        STATS.SET_PACKED_STAT_BOOL_CODE(27227, true, 0)
                        notification.show("Casino Prep Completed, Please Switch Sessions to Apply!")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Skip Casino Prep")

                    ImGui.Separator()

                    if ImGui.Button("Apply##14") then
                        reset_casino_preps()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Reset Casino Prep")

                    ImGui.Separator()

                    if ImGui.Button("Apply##15") then
                        casino_silent_preset()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Silent & Sneaky Approach")

                    ImGui.Separator()

                    if ImGui.Button("Apply##16") then
                        casino_big_con_preset()
                    end
                    ImGui.SameLine()
                    ImGui.Text("The Big Con Approach")

                    ImGui.Separator()

                    if ImGui.Button("Apply##17") then
                       casino_aggressive_preset()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Aggressive Approach")



                    ImGui.EndTabItem()
                end

                if ImGui.BeginTabItem("Others") then -- other features tab
                
                    if ImGui.Button("Apply##18") then
                        CUTSCENE.STOP_CUTSCENE_IMMEDIATELY()
                        notification.show("Skipped Cutscene")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Skip Cutscene Animation")

                    ImGui.Separator()

                    if ImGui.Button("Apply##19") then
                        locals.set_int("fm_mission_controller", 54037, 5)
                        notification.show("Bypassed Fingerprint Hack")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Bypass Fingerprint Hack")

                    ImGui.Separator()

                    if ImGui.Button("Apply##20") then
                        locals.set_int("fm_mission_controller", 55103, 5)
                        notification.show("Bypassed Keypad Hack enabled")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Bypass Keypad Hack enabled")

                    ImGui.Separator()

                    if ImGui.Button("Apply##21") then
                        local drillValue = locals.get_int("fm_mission_controller", 10549 + 37)
                        locals.set_int("fm_mission_controller", 10549 + 7, drillValue)
                        notification.show("Vault drill bypassed")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Vault drill bypass")

                    ImGui.Separator()

                    if ImGui.Button("Apply##22") then
                        local prefix0 = "MP0_"
                        local prefix1 = "MP1_"

                        local completedPosix0 = MISC.GET_HASH_KEY(prefix0 .. "H3_COMPLETEDPOSIX")
                        local completedPosix1 = MISC.GET_HASH_KEY(prefix1 .. "H3_COMPLETEDPOSIX")
                        STATS.STAT_SET_INT(completedPosix0, -1, true)
                        STATS.STAT_SET_INT(completedPosix1, -1, true)

                        local cooldown0 = MISC.GET_HASH_KEY(prefix0 .. "MPPLY_H3_COOLDOWN")
                        local cooldown1 = MISC.GET_HASH_KEY(prefix1 .. "MPPLY_H3_COOLDOWN")
                        STATS.STAT_SET_INT(cooldown0, -1, true)
                        STATS.STAT_SET_INT(cooldown1, -1, true)
                        notification.show("Removed Cooldown. Make Sure You Exit Your Arcade To Use This Feature")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Remove Heist Cooldown")

                    ImGui.Separator()


                    if ImGui.Button("Apply##23") then
                        -- Force script host
                        notification.show("Skipping Checkpoint...")
                        network.force_script_host("fm_mission_controller_2020")
                        script.yield(1000)

                        local offset = 20391 + 2
                        local offset1 = 54763 + 2
                        local bitToSet = (1 << 17)
                        

                        local currentVal = locals.get_int("fm_mission_controller", offset)
                        locals.set_int("fm_mission_controller", offset, currentVal | bitToSet)
                        local currentVal = locals.get_int("fm_mission_controller_2020", offset)
                        locals.set_int("fm_mission_controller_2020", offset1, currentVal | bitToSet)
                    end
                    ImGui.SameLine()
                    ImGui.Text("Skip Checkpoint (Unstable)")

                    ImGui.Separator()

                    if ImGui.Button("Apply##24") then
                        instant_finish_casino_heist()
                        notification.show("Casino heist completed")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Instantly Complete Casino Heist (Risky)")

                    ImGui.EndTabItem()
                end

                if ImGui.BeginTabItem("Set Player Cuts(Risky)") then -- change player cuts tab
                    ImGui.Text("Set Player Cuts")

                    hostCut, _ = ImGui.SliderInt("Host Cut", hostCut, 0, 120)
                    p2Cut, _ = ImGui.SliderInt("Player 2 Cut", p2Cut, 0, 120)
                    p3Cut, _ = ImGui.SliderInt("Player 3 Cut", p3Cut, 0, 120)
                    p4Cut, _ = ImGui.SliderInt("Player 4 Cut", p4Cut, 0, 120)

                    if ImGui.Button("ApplyPayout##2") then
                        script.run_in_fiber(function()
                            globals.set_int(1968996 + 1497 + 736 + 92 + 1, hostCut)
                            globals.set_int(1968996 + 1497 + 736 + 92 + 2, p2Cut)
                            globals.set_int(1968996 + 1497 + 736 + 92 + 3, p3Cut)
                            globals.set_int(1968996 + 1497 + 736 + 92 + 4, p4Cut)
                            notification.show("Cuts Applied") -- applied message
                        end)
                    end

                    ImGui.Separator()

                    if ImGui.Button("Apply##25") then
                        -- Force script host
                        network.force_script_host("fm_mission_controller")
                        script.yield(1000)
                        globals.set_int(1973359 + 1 + (0 * 68) + 7 + 1, 1)
                        globals.set_int(1973359 + 1 + (1 * 68) + 7 + 2, 1)
                        globals.set_int(1973359 + 1 + (2 * 68) + 7 + 3, 1)
                        globals.set_int(1973359 + 1 + (3 * 68) + 7 + 4, 1)
                        notification.show("Forced Ready") -- Forced Ready
                    end
                    ImGui.SameLine()
                    ImGui.Text("Force Players Ready")

                    ImGui.EndTabItem()
                end

                ImGui.EndTabBar() -- end casino bar
            end

            ImGui.EndTabItem()
        end

        if ImGui.BeginTabItem("Doomsday") then -- Doomsday Heist Tab Item
            if ImGui.BeginTabBar("DoomsdayFeatures1") then -- Doomsday bar
                if ImGui.BeginTabItem("Prep Option") then -- prep tab
                    ImGui.Text("Default max payout $2,550,000")
                    
                    ImGui.Separator()

                    if ImGui.Button("Apply##26") then
                        applyDoomsdayAct1Preps()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Preset Act I: The Data Breaches")

                    if ImGui.Button("Apply##27") then
                        applyDoomsdayAct2Preps()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Preset Act II: The Bogdan Problem")

                    if ImGui.Button("Apply##28") then
                        applyDoomsdayAct3Preps()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Preset Act III: The Doomsday Scenario")

                    ImGui.Separator()

                    if ImGui.Button("Apply##29") then
                        instant_finish_Doomsday_heist()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Instant Finish Doomsday Heist")

                    ImGui.EndTabItem()
                end

                if ImGui.BeginTabItem("Others") then -- other features tab
                    if ImGui.Button("Apply##30") then
                        resetDoomsdayPreps()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Reset Doomsday Heist")

                    ImGui.Separator()

                    if ImGui.Button("Apply##31") then
                        -- Ready player global indexes hehe dont fkn ask
                        local Ready = {
                            Player1 = { type = "int", global = 1882449 + 1 + (0 * 149) + 43 + 11 + 1 },
                            Player2 = { type = "int", global = 1882449 + 1 + (1 * 149) + 43 + 11 + 2 },
                            Player3 = { type = "int", global = 1882449 + 1 + (2 * 149) + 43 + 11 + 3 },
                            Player4 = { type = "int", global = 1882449 + 1 + (3 * 149) + 43 + 11 + 4 },
                        }
                        -- Force host of script
                        network.force_script_host("fm_mission_controller")
                        script.yield(1000)

                        -- Set all players to Ready
                        globals.set_int(Ready.Player1.global, 1)
                        globals.set_int(Ready.Player2.global, 1)
                        globals.set_int(Ready.Player3.global, 1)
                        globals.set_int(Ready.Player4.global, 1)

                        notification.show("Forced Ready")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Force Players Ready")

                    ImGui.Separator()

                    if ImGui.Button("Apply##32") then
                        CUTSCENE.STOP_CUTSCENE_IMMEDIATELY()
                        notification.show("Skipped Cutscene")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Skip Cutscene")

                    ImGui.Separator()

                    if ImGui.Button("Apply##33") then
                        locals.set_int("fm_mission_controller", 1539, 2)
                        notification.show("Bypassed Data Breaches hack")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Bypass Hack Act I: The Data Breaches")

                    ImGui.Separator()

                    if ImGui.Button("Apply##34") then
                        locals.set_int("fm_mission_controller", 1431, 3) 
                        notification.show("Bypassed Doomsday Scenario Hack")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Bypass Hack Act III: The Doomsday")

                    ImGui.Separator()

                    if ImGui.Button("Apply##35") then
                        SkipAllDoomsCheckpoints() 
                    end
                    ImGui.SameLine()
                    ImGui.Text("Skip Checkpoints")

                    ImGui.EndTabItem()
                end

                if ImGui.BeginTabItem("Set Payout(Risky)") then
                    ImGui.Text("Set Payout")

                    if ImGui.Button("Apply##36") then
                        applyDoomsdayAct1MaxCuts()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Apply Act I: The Data Breaches Max Cut")

                    if ImGui.Button("Apply##37") then
                        applyDoomsdayAct2MaxCuts()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Apply Act II: The Bogdan Problem Max Cut")

                    if ImGui.Button("Apply##38") then
                        applyDoomsdayAct3MaxCuts()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Apply Act III: The Doomsday Scenario Max Cut")

                    ImGui.Separator()

                    DoomsdayHostCut, _ = ImGui.SliderInt("Host Cut", DoomsdayHostCut, 0, 1000)
                    Doomsdayp2Cut, _ = ImGui.SliderInt("Player 2 Cut", Doomsdayp2Cut, 0, 1000)
                    Doomsdayp3Cut, _ = ImGui.SliderInt("Player 3 Cut", Doomsdayp3Cut, 0, 1000)
                    Doomsdayp4Cut, _ = ImGui.SliderInt("Player 4 Cut", Doomsdayp4Cut, 0, 1000)

                    if ImGui.Button("ApplyPayout##3") then
                        script.run_in_fiber(function()
                            local base = 1965032

                            globals.set_int(base + 1, DoomsdayHostCut)
                            globals.set_int(base + 2, Doomsdayp2Cut)
                            globals.set_int(base + 3, Doomsdayp3Cut)
                            globals.set_int(base + 4, Doomsdayp4Cut)
                            notification.show("Cuts Applied") -- applied message
                        end)
                    end
                    

                    ImGui.EndTabItem()
                end

                ImGui.EndTabBar()
            end

            ImGui.EndTabItem()
        end

        if ImGui.BeginTabItem("Agency") then --  Agency Tab Item
            if ImGui.BeginTabBar("AgencyFeatures1") then -- Agency bar
                if ImGui.BeginTabItem("Basic") then -- prep tab
                    ImGui.Text("Default max payout $2,500,000")

                    if ImGui.Button("Apply##39") then
                        locals.set_int("agency_prep", 1568, 2)
                        notification.show("Applied max payout $2,500,000")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Set max payout (Please use after mission starts)")

                    ImGui.Separator()

                    if ImGui.Button("Apply##40") then
                        local charIndex = globals.get_int(1574927) or 0
                        if charIndex ~= 1 then charIndex = 0 end  -- Only 0 or 1 allowed
                        local prefix = "MP" .. tostring(charIndex) .. "_"

                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "FIXER_STORY_COOLDOWN_POSIX"), 0, true)
                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "FIXER_SECURITY_CONTRACT_COOLDOWN_TIME"), 0, true)
                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY(prefix .. "REQUEST_FRANKLIN_PAYPHONE_HIT_COOLDOWN"), 0, true)

                        notification.show("Removed Cooldown")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Remove Cooldown Agency")

                    ImGui.Separator()

                    if ImGui.Button("Apply##41") then
                        local offset = 20391 + 2
                        local offset1 = 54763 + 2
                        local bitToSet = (1 << 17)
                        
                        local currentVal = locals.get_int("fm_mission_controller", offset)
                        locals.set_int("fm_mission_controller", offset, currentVal | bitToSet)
                        local currentVal = locals.get_int("fm_mission_controller_2020", offset)
                        locals.set_int("fm_mission_controller_2020", offset1, currentVal | bitToSet)

                        notification.show("Skipping Checkpoint...")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Skip Checkpoints")

                    ImGui.Separator()

                    if ImGui.Button("Apply##42") then
                        instant_finish_agency_final()
                    end
                    ImGui.SameLine()
                    ImGui.Text("Instant Complete Agency Heist")

                    ImGui.Separator()

                    ImGui.Text("Custom Contract: (Default: None)") -- combo start

                    local function selectContract(index)
                        selectedContractIndex = index
                    end

                    ImGui.Combo("Contract", contracts, selected_contract, function(idx, label)
                        selected_contract = idx
                        local id = contract_ids[idx + 1]
                        selectContract(id)
                        notification.show(string.format("Selected: %s", label))
                    end)

                    ImGui.Text("")

                    if ImGui.Button("Complete Prep and Apply Contract") then
                        applyContract(id)
                    end


                    ImGui.EndTabItem()
                end

                ImGui.EndTabBar()
            end

            ImGui.EndTabItem()
        end

        if ImGui.BeginTabItem("Autoshop") then --  Autoshop Tab Item
            if ImGui.BeginTabBar("AutoshopFeatures1") then -- Autoshop bar
                if ImGui.BeginTabItem("Prep Option") then -- prep tab
                    ImGui.Text("Select Contract:")

                    local function selectAutoShopContract(index)
                        selectedAutoShopContractIndex = index
                    end

                    ImGui.Combo("Autoshop Contract", autoShopContracts, selected_AutoShopcontract, function(idx, label)
                        selected_AutoShopcontract = idx
                        local id = autoShopContracts_ids[idx + 1]
                        selectAutoShopContract(id)
                        notification.show(string.format("Selected: %s", label))
                    end)


                    ImGui.Text("")

                    if ImGui.Button("Skip Prep and Apply Contract") then
                        apply_and_complete_auto_shop(id)
                    end

                    ImGui.Separator()

                    if ImGui.Button("Apply##43") then
                        locals.set_int("tuner_planning", 406, 2)

                        notification.show("Reset Heist Planning")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Reset Heist Planning")

                    ImGui.Separator()

                    if ImGui.Button("Skip Cutscene") then
                        CUTSCENE.STOP_CUTSCENE_IMMEDIATELY()
                        notification.show("Skipped Cutscene")
                    end

                    ImGui.Separator()

                    if ImGui.Button("Apply##44") then
                        local offset = 20391 + 2
                        local offset1 = 54763 + 2
                        local bitToSet = (1 << 17)
                        

                        local currentVal = locals.get_int("fm_mission_controller", offset)
                        locals.set_int("fm_mission_controller", offset, currentVal | bitToSet)
                        local currentVal = locals.get_int("fm_mission_controller_2020", offset)
                        locals.set_int("fm_mission_controller_2020", offset1, currentVal | bitToSet)
                        notification.show("Skipping Checkpoint...")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Skip Checkpoints")

                    ImGui.Separator()

                    if ImGui.Button("Apply##45") then
                        -- Force script host for fm_mission_controller
                        network.force_script_host("fm_mission_controller_2020")
                        script.yield(1000)

                        -- Set finish
                        locals.set_int("fm_mission_controller_2020", 54763 + 1, 51338977)
                        locals.set_int("fm_mission_controller_2020", 54763 + 1776 + 1, 101) 
                        notification.show("Completed Autoshop Heist")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Instant Complete Autoshop Heist (Risky)")

                    ImGui.Separator()
                    ImGui.Text("Max Payout does not work with Union Depository")

                    if ImGui.Button("Apply##46") then
                        local payout = 2200000
                        tunables.set_int(util.joaat("TUNER_ROBBERY_LEADER_CASH_REWARD0"), payout)
                        tunables.set_int(util.joaat("TUNER_ROBBERY_LEADER_CASH_REWARD1"), payout)
                        tunables.set_int(util.joaat("TUNER_ROBBERY_LEADER_CASH_REWARD2"), payout)
                        tunables.set_int(util.joaat("TUNER_ROBBERY_LEADER_CASH_REWARD3"), payout)
                        tunables.set_int(util.joaat("TUNER_ROBBERY_LEADER_CASH_REWARD4"), payout)
                        tunables.set_int(util.joaat("TUNER_ROBBERY_LEADER_CASH_REWARD5"), payout)
                        tunables.set_int(util.joaat("TUNER_ROBBERY_LEADER_CASH_REWARD6"), payout)
                        tunables.set_int(util.joaat("TUNER_ROBBERY_LEADER_CASH_REWARD7"), payout)
                        locals.set_int("tuner_planning", 406, 2)

                        notification.show("Applied Amount: $" .. payout)
                        notification.show(tostring(util.joaat("TUNER_ROBBERY_LEADER_CASH_REWARD0")))
                    end
                    ImGui.SameLine()
                    ImGui.Text("Apply Max Payout")


                    ImGui.EndTabItem()
                end
                
                ImGui.EndTabBar()
            end

            ImGui.EndTabItem()
        end

        if ImGui.BeginTabItem("Classic Heist") then --  Classic job Tab Item
            if ImGui.BeginTabBar("ClassicFeatures1") then -- Classic bar
                if ImGui.BeginTabItem("Main Options") then -- prep tab
                    ImGui.Text("Max payout is 3,000,000$")

                    if ImGui.Button("Apply##47") then
                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP0_HEIST_PLANNING_STAGE"), -1, true)
                        STATS.STAT_SET_INT(MISC.GET_HASH_KEY("MP1_HEIST_PLANNING_STAGE"), -1, true)
                        notification.show("Skipped apartment heist prep, switch sessions to Apply")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Skip apartment heist prep")

                    ImGui.Separator()

                    if ImGui.Button("Redraw Heist Board") then
                        globals.set_int(1931835, 22)
                        notification.show("Redrawed Heist Board")
                    end

                    ImGui.Separator()

                    if ImGui.Button("Skip Cutscene") then
                        CUTSCENE.STOP_CUTSCENE_IMMEDIATELY()
                        notification.show("Skipped Cutscene")
                    end

                    ImGui.Separator()
                    ImGui.Text("Others Features:")

                    if ImGui.Button("Bypass Fleeca Hack") then
                        locals.set_int("fm_mission_controller", 12244, 7)
                        notification.show("Fleeca hack bypassed")
                    end

                    if ImGui.Button("Bypass Fleeca Drill") then
                        locals.set_float("fm_mission_controller", 10520, 100.0)
                        notification.show("Bypassed Fleeca Drill")
                    end

                    if ImGui.Button("Bypass Pacific Hack") then
                        locals.set_int("fm_mission_controller", 10213, 9)
                        notification.show("Bypassed Pacific Hack")
                    end

                    if ImGui.Button("Kill Classic Heist Cooldown") then
                        local playerId = PLAYER.PLAYER_ID()
                        local cooldownGlobal = 1877086 + 1 + (playerId * 77) + 76
                        globals.set_int(cooldownGlobal, -1)
                        notification.show("Killed Classic Heist Cooldown")
                    end

                    ImGui.Separator()

                    if ImGui.Button("Skip Checkpoint") then
                        local offset = 20391 + 2
                        local offset1 = 54763 + 2
                        local bitToSet = (1 << 17)
                        

                        local currentVal = locals.get_int("fm_mission_controller", offset)
                        locals.set_int("fm_mission_controller", offset, currentVal | bitToSet)
                        local currentVal = locals.get_int("fm_mission_controller_2020", offset)
                        locals.set_int("fm_mission_controller_2020", offset1, currentVal | bitToSet)
                        notification.show("Skipping Checkpoint...")
                    end

                    if ImGui.Button("Instant Complete Classic Heist (It will Complete Pacific Heist)") then
                        classic_heist_instant_()
                    end

                    if ImGui.Button("Unlock All Apartment Heists") then
                        unlockAllClassicHeist()
                    end
                
                    ImGui.EndTabItem()
                end

                if ImGui.BeginTabItem("Set Payout(Risky)") then -- change player cuts tab
                    ImGui.Text("Set Payout")
                    ImGui.Text("Note: The Set Payout here is for customization only. Please do not exceed the maximum bonus of each robbery mission.")
                    ImGui.Text("The maximum payouts for each robbery mission is shown in the table below.")

                    classic_cut1, _ = ImGui.SliderInt("Player 1 Cut", classic_cut1, 0, 1490)
                    classic_cut2, _ = ImGui.SliderInt("Player 2 Cut", classic_cut2, 0, 1490)
                    classic_cut3, _ = ImGui.SliderInt("Player 3 Cut", classic_cut3, 0, 1490)
                    classic_cut4, _ = ImGui.SliderInt("Player 4 Cut", classic_cut4, 0, 1490)

                    if ImGui.Button("ApplyPayout##4") then
                        notification.show("Applied Cuts")
                        classic_apply_cuts(classic_cut1, classic_cut2, classic_cut3, classic_cut4) -- do we need to return the cuts here? unsure,
                    end

                    ImGui.Separator()
                    ImGui.Text("Apply maximum payouts for each robbery mission:")

                    if ImGui.Button("Max payout Fleeca Heist (<= 1490%)") then
                        classic_cut1 = 1490
                        classic_cut2 = 1490
                        classic_cut3 = 1490
                        classic_cut4 = 1490

                        notification.show("Applied Max Cuts")
                        classic_apply_cuts(classic_cut1, classic_cut2, classic_cut3, classic_cut4)  -- call the apply function
                    end

                    if ImGui.Button("Max payout Prison Break(<= 429%)") then
                        classic_cut1 = 429
                        classic_cut2 = 429
                        classic_cut3 = 429
                        classic_cut4 = 429

                        notification.show("Applied Max Cuts")
                        classic_apply_cuts(classic_cut1, classic_cut2, classic_cut3, classic_cut4)  -- call the apply function
                    end

                    if ImGui.Button("Max payout Humane Labs (<= 317%)") then
                        classic_cut1 = 317
                        classic_cut2 = 317
                        classic_cut3 = 317
                        classic_cut4 = 317

                        notification.show("Applied Max Cuts")
                        classic_apply_cuts(classic_cut1, classic_cut2, classic_cut3, classic_cut4)  -- call the apply function
                    end

                    if ImGui.Button("Max payout A-Series (trevor) (<= 200)") then
                        classic_cut1 = 200
                        classic_cut2 = 200
                        classic_cut3 = 200
                        classic_cut4 = 200

                        notification.show("Applied Max Cuts")
                        classic_apply_cuts(classic_cut1, classic_cut2, classic_cut3, classic_cut4)  -- call the apply function
                    end

                    ImGui.Separator()

                    if ImGui.Button("Apply##48") then
                        network.force_script_host("fm_mission_controller")
                        script.yield(1000)


                        for i = 1, 4 do
                            local base = 2658019
                            local globalIndex = base + 1 + ((i - 1) * 467) + 269
                            globals.set_int(globalIndex, 6)
                        end

                        notification.show("Forced Ready")
                    end
                    ImGui.SameLine()
                    ImGui.Text("Force players ready")




                    ImGui.EndTabItem()
                end

                ImGui.EndTabBar()
            end

            ImGui.EndTabItem()
        end

        ImGui.EndTabBar()
    end
end)
